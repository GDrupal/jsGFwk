var background = {
	id: "background",
	zOrder: 1,
	visible: true,
	
	map: [],
	deltaBlink: 0,
	isBlinking: false,
		
	init: function () {
		this.deltaBlink = 0;
		this.isBlinking = false;
		
		this.map.splice(0);
		this.map.push([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);
		this.map.push([0,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,2,2,2,2,2,2,2,2,2,2,2,0]);
		this.map.push([0,2,0,0,0,0,2,0,0,0,0,0,2,0,0,2,0,0,0,0,0,2,0,0,0,0,2,0]);
		this.map.push([0,3,0,0,0,0,2,0,0,0,0,0,2,0,0,2,0,0,0,0,0,2,0,0,0,0,3,0]);
		this.map.push([0,2,0,0,0,0,2,0,0,0,0,0,2,0,0,2,0,0,0,0,0,2,0,0,0,0,2,0]);
		this.map.push([0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0]);
		this.map.push([0,2,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,2,0]);
		this.map.push([0,2,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,2,0]);
		this.map.push([0,2,2,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,2,2,0]);
		this.map.push([0,0,0,0,0,0,2,0,0,0,0,0,1,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0]);
		this.map.push([0,0,0,0,0,0,2,0,0,0,0,0,1,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0]);
		this.map.push([0,0,0,0,0,0,2,0,0,1,1,1,1,1,1,1,1,1,1,0,0,2,0,0,0,0,0,0]);
		this.map.push([0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0]);
		this.map.push([0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0]);
		this.map.push([1,1,1,1,1,1,2,1,1,1,0,0,0,0,0,0,0,0,1,1,1,2,1,1,1,1,1,1]);
		this.map.push([0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0]);
		this.map.push([0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0]);
		this.map.push([0,0,0,0,0,0,2,0,0,1,1,1,1,1,1,1,1,1,1,0,0,2,0,0,0,0,0,0]);
		this.map.push([0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0]);
		this.map.push([0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0]);
		this.map.push([0,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,2,2,2,2,2,2,2,2,2,2,2,0]);
		this.map.push([0,2,0,0,0,0,2,0,0,0,0,0,2,0,0,2,0,0,0,0,0,2,0,0,0,0,2,0]);
		this.map.push([0,2,0,0,0,0,2,0,0,0,0,0,2,0,0,2,0,0,0,0,0,2,0,0,0,0,2,0]);
		this.map.push([0,3,2,2,0,0,2,2,2,2,2,2,2,1,1,2,2,2,2,2,2,2,0,0,2,2,3,0]);
		this.map.push([0,0,0,2,0,0,2,0,0,2,0,0,0,0,0,0,0,0,2,0,0,2,0,0,2,0,0,0]);
		this.map.push([0,0,0,2,0,0,2,0,0,2,0,0,0,0,0,0,0,0,2,0,0,2,0,0,2,0,0,0]);
		this.map.push([0,2,2,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,2,2,0]);
		this.map.push([0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0]);
		this.map.push([0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0]);
		this.map.push([0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0]);
		this.map.push([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);
	},
	
	update: function (delta) { 
		this.deltaBlink += delta;
		if (this.deltaBlink > 0.15) {
			this.isBlinking = !this.isBlinking;
			this.deltaBlink = 0;
		}
	},
	
	draw: function (context) { 
		context.save();
			context.drawImage(jsGFwk.Sprites.map.image, 0, 0);
			
			for (var i = 0; i < this.map.length; i++)
            {
                for(var j = 0; j < this.map[i].length; j++)
                {
					switch (this.map[i][j]) {
						case 2:
							context.drawImage(jsGFwk.Sprites.normalPill.image, (j * 12) + 3, (i * 12) + 3);
							break;
						case 3:
							if (!this.isBlinking) {
								context.drawImage(jsGFwk.Sprites.bigPill.image, j * 12, i * 12);
							}
							break;
					}
                }
            }
		context.restore();
	}
}